# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    env:
      SERVICE_NAME: eureka #← JAR 이름 (finalName)

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: 🛠️ Build with Maven
        run: mvn -B clean package -DskipTests

      - name: 💾 백업 기존 JAR on Remote
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            SERVICE_NAME=${{ env.SERVICE_NAME }}
            JAR_PATH=~/target/${SERVICE_NAME}.jar
            BACKUP_PATH=~/backup_jars/${SERVICE_NAME}.jar.bak
            mkdir -p ~/backup_jars
            if [ -f "$JAR_PATH" ]; then
              cp "$JAR_PATH" "$BACKUP_PATH"
              echo "✅ 백업 완료: $BACKUP_PATH"
            else
              echo "⚠️ 백업 생략: $JAR_PATH 없음"
            fi

      - name: 🚚 Upload JAR to Remote
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "target/*.jar"
          target: "~/"
          rm: false

      - name: 🚀 Execute startup.sh on Remote
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: "~/eurekastartup.sh ${{ env.SERVICE_NAME }}"
